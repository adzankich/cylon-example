// Generated by CoffeeScript 1.7.1
(function() {
  var ConwayRobot, Cylon, Green, Red, bot, bots, robot, _i, _len;

  Cylon = require('cylon');

  bots = [
    {
      port: '/dev/rfcomm0',
      name: 'Thelma'
    }, {
      port: '/dev/rfcomm1',
      name: 'Louise'
    }, {
      port: '/dev/rfcomm2',
      name: 'Grace'
    }, {
      port: '/dev/rfcomm3',
      name: 'Grace'
    }, {
      port: '/dev/rfcomm4',
      name: 'Ada'
    }
  ];

  Green = 0x00FF00;

  Red = 0xFF0000;

  ConwayRobot = (function() {
    function ConwayRobot() {}

    ConwayRobot.prototype.connection = {
      name: 'Sphero',
      adaptor: 'sphero'
    };

    ConwayRobot.prototype.device = {
      name: 'sphero',
      driver: 'sphero'
    };

    ConwayRobot.prototype.born = function() {
      this.contacts = 0;
      this.age = 0;
      this.life();
      return this.move();
    };

    ConwayRobot.prototype.move = function() {
      return this.sphero.roll(90, Math.floor(Math.random() * 360));
    };

    ConwayRobot.prototype.life = function() {
      this.alive = true;
      return this.sphero.setRGB(Green);
    };

    ConwayRobot.prototype.death = function() {
      this.alive = false;
      this.sphero.setRGB(Red);
      return this.sphero.stop();
    };

    ConwayRobot.prototype.enoughContacts = function() {
      if (this.contacts >= 2 && this.contacts < 7) {
        return true;
      } else {
        return false;
      }
    };

    ConwayRobot.prototype.birthday = function() {
      this.age += 1;
      console.log("Happy birthday, " + this.name + ". You are " + this.age + " and had " + this.contacts + " contacts.");
      if (this.enoughContacts()) {
        if (this.alive == null) {
          this.rebirth();
        }
      } else {
        this.death();
      }
      return this.contacts = 0;
    };

    ConwayRobot.prototype.work = function(me) {
      me.sphero.on('connect', (function(_this) {
        return function() {
          me.sphero.detectCollisions();
          return me.born();
        };
      })(this));
      me.sphero.on('collision', (function(_this) {
        return function() {
          return _this.contacts += 1;
        };
      })(this));
      every(3..seconds(), (function(_this) {
        return function() {
          if (_this.alive === true) {
            return me.move();
          }
        };
      })(this));
      return every(10..seconds(), (function(_this) {
        return function() {
          if (_this.alive === true) {
            return me.birthday();
          }
        };
      })(this));
    };

    return ConwayRobot;

  })();

  for (_i = 0, _len = bots.length; _i < _len; _i++) {
    bot = bots[_i];
    robot = new ConwayRobot;
    robot.connection.port = bot.port;
    robot.name = bot.name;
    Cylon.robot(robot);
  }

  Cylon.start();

}).call(this);
